generator client {
  provider = "prisma-client-js"
  output   = "generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name     String
  lastName String

  email       String  @unique
  linkedEmail String  @unique // TODO: привязанная почта к gmail например и другая, по ней confirm
  password    String
  avatar      String?

  phone     String
  birthdate String
  gender    String

  questions      Question[]
  likedQuestions Question[] @relation("LikedQuestions")
  answers        Answer[]

  @@map("user")
}

model Question {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  themeText   String  @map("theme_text")
  text        String? @default("")
  category    String
  subcategory String
  // TODO: может потом сделать получать уведомления, разрешить комменты

  likes       Int?         @default(0)
  likedBy     User[]       @relation("LikedQuestions")
  isLeader    Boolean?     @default(false) @map("is_leader")
  additionals Additional[] @relation("Additional")

  answers Answer[]

  user   User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String?

  @@map("question")
}

model Additional {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now()) @map("created_at")
  question   Question @relation("Additional", fields: [questionId], references: [id], onDelete: Cascade)
  questionId String
  text       String

  @@map("additional")
}

model Answer {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  text         String
  likes        Int?     @default(0)
  isBestAnswer Boolean? @default(false) @map("is_best_answer") // TODO: потом сделать чтоб 1 ток такой был 

  Question   Question? @relation(fields: [questionId], references: [id])
  questionId String?

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@unique([userId, questionId])
  @@map("answer")
}
